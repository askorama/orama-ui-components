/* ===WEB FONTS MANAGEMENT=== */
/**
 * Applies the font smoothing
 * Used for better cross browser support
 * Ref: https://maximilianhoffmann.com/posts/better-font-rendering-on-osx
 */
@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

/**
  * Use to set the theme CSS custom properties based on user preferences
  * @include mapToCustomProperties($map);
 */
@mixin mapToCustomProperties($map: ()) {
  @each $key, $value in $map {
    #{$key}: $value;
  }
}

/**
 * Use to hide elements visually but still make them accessible to screen readers
 * @include screen-reader-only();
 */
@mixin screen-reader-only {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  position: absolute;
  white-space: nowrap;
  overflow: hidden;
  width: 1px;
}

@mixin flex-cols($cols: 1, $breakpoint: undefined, $gap: $spacingS) {
  @if $breakpoint != undefined {
    @media (--#{$breakpoint}-min) {
      flex: 0 0 calc(((100% - calc(#{$gap} * #{calc(12 / $cols - 1)})) / 12 * $cols));
      max-width: calc(((100% - calc(#{$gap} * #{calc(12 / $cols - 1)})) / 12 * $cols));
    }
  } @else {
    flex: 0 0 calc(((100% - calc(#{$gap} * #{calc(12 / $cols - 1)})) / 12 * $cols));
    max-width: calc(((100% - calc(#{$gap} * #{calc(12 / $cols - 1)})) / 12 * $cols));
  }
}

@mixin paragraph($variant: 'primary') {
  font-size: var(--font-size-md, $font-size-md);
  line-height: var(--font-line-height-m, $font-line-height-m);
  font-weight: var(--font-weight-normal, $font-weight-normal);
  margin: 0;
  padding: 0;

  @media (--sm-min) {
    font-size: var(--font-size-sm, $font-size-sm);
  }

  @if $variant == 'primary' {
    color: var(--text-color-primary, text-color('primary'));
  }

  @if $variant == 'secondary' {
    color: var(--text-color-secondary, text-color('secondary'));
  }

  @if $variant == 'tertiary' {
    color: var(--text-color-tertiary, text-color('tertiary'));
  }
}

@mixin span($variant: 'primary') {
  font-size: var(--font-size-sm, $font-size-sm);
  line-height: var(--font-line-height-s, $font-line-height-s);
  font-weight: var(--font-weight-normal, $font-weight-normal);
  margin: 0;
  padding: 0;

  @if $variant == 'primary' {
    color: var(--text-color-primary, text-color('primary'));
  }

  @if $variant == 'secondary' {
    color: var(--text-color-secondary, text-color('secondary'));
  }

  @if $variant == 'tertiary' {
    color: var(--text-color-tertiary, text-color('tertiary'));
  }
}

@mixin small($variant: 'primary') {
  font-size: var(--font-size-xs, $font-size-xs);
  font-weight: var(--font-weight-normal, $font-weight-normal);
  line-height: var(--font-line-height-s, $font-line-height-s);
  margin: 0;
  padding: 0;

  @if $variant == 'primary' {
    color: var(--text-color-primary, text-color('primary'));
  }

  @if $variant == 'secondary' {
    color: var(--text-color-secondary, text-color('secondary'));
  }

  @if $variant == 'tertiary' {
    color: var(--text-color-tertiary, text-color('tertiary'));
  }
}
