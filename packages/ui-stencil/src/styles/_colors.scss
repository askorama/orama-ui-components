/**
* * PRIMITIVE COLORS
*/
$gray50: #fbfbfb;
$gray100: #efefef;
$gray200: #dadada;
$gray300: #c6c6c6;
$gray400: #afafb1;
$gray500: #99989d;
$gray600: #838289;
$gray700: #2e2e2e;
$gray800: #212121;
$gray900: #151515;
$gray950: #050505;
$purple100: #f7f6f9;
$purple200: #eee9f6;
$purple300: #ae8ff7;
$purple500: #8152ee;
$purple700: #432d77;

/**
* * SEMANTIC AND ELEMENT COLOR MAP FOR LIGHT THEME
* in order to use one of the colors included in the palette map;
*  use the functions text-color(key), background-color(key), border-color(key)
* ie: text-color('primary')
* These color functions should be used to:
*  - define a fallback color for a CSS custom property
*  - for a specific element, we want to use the same color regardless of the color scheme
*/
$palette: (
  text: (
    primary: $gray900,
    secondary: $gray600,
    tertiary: $gray500,
    accent: $purple300,
    inactive: $gray500,
    reverse: white,
  ),
  background: (
    primary: $gray50,
    secondary: white,
    tertiary: $purple200,
    fourth: $gray100,
    reverse: black,
  ),
  border: (
    primary: $gray200,
    secondary: $gray100,
    tertiary: $gray900,
    accent: $purple300,
  ),
  icon: (
    primary: $gray900,
    secondary: $gray200,
    tertiary: $gray600,
    inactive: $gray500,
    accent: $purple500,
  ),
  shadow: (
    primary: white,
  ),
  'button-text': (
    primary: $purple100,
  ),
  'button-background': (
    primary: $purple500,
  ),
);

/**
* * SEMANTIC AND ELEMENT COLOR MAP FOR DARK THEME
*/
$paletteDark: (
  text: (
    primary: $gray50,
    secondary: $gray200,
    tertiary: $gray600,
    accent: $purple300,
    inactive: $gray500,
    reverse: black,
  ),
  background: (
    primary: $gray950,
    secondary: $gray900,
    tertiary: $gray800,
    fourth: $gray700,
    reverse: white,
  ),
  border: (
    primary: $gray700,
    secondary: $gray900,
    tertiary: $gray400,
    accent: $purple500,
  ),
  icon: (
    primary: $gray50,
    secondary: $gray200,
    tertiary: $gray600,
    inactive: $gray500,
    accent: $purple500,
  ),
  shadow: (
    primary: black,
  ),
  'button-text': (
    primary: $gray100,
  ),
  'button-background': (
    primary: $purple700,
  ),
);

:export {
  gray50: $gray50;
  gray100: $gray100;
  gray200: $gray200;
  gray300: $gray300;
  gray400: $gray400;
  gray500: $gray500;
  gray600: $gray600;
  gray700: $gray700;
  gray800: $gray800;
  gray900: $gray900;
  gray950: $gray950;
  purple100: $purple100;
  purple200: $purple200;
  purple300: $purple300;
  purple500: $purple500;
  purple700: $purple700;

  @each $key, $value in $palette {
    @each $subkey, $subvalue in $value {
      --#{$key}-color-#{$subkey}-light: #{$subvalue};
    }
  }

  @each $key, $value in $paletteDark {
    @each $subkey, $subvalue in $value {
      --#{$key}-color-#{$subkey}-dark: #{$subvalue};
    }
  }
}
