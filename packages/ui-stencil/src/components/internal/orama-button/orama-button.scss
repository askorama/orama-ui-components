// TODO: We need to revisit this styles. There are some duplications and variables without fallback
.button {
  position: relative;
  display: flex;
  gap: var(--spacing-s, $spacing-s);
  align-items: center;
  border-radius: var(--radius-m, $radius-m);
  border: 0;
  padding: var(--spacing-m, $spacing-m);
  cursor: pointer;
  font-family: var(--font-primary, font('primary'));
  transition: all 0.2s;
  transition-property: color, background-color, opacity;
  width: 100%;
  text-align: left;

  &__tooltip {
    display: block;
    opacity: 0;
    position: absolute;
    background-color: var(--text-color-primary, text-color('primary'));
    color: var(--background-color-primary, background-color('primary'));
    padding: var(--spacing-s, $spacing-s);
    border-radius: var(--radius-s, $radius-s);
    font-size: 10px;
    z-index: 1;
    top: -28px;
    animation: fadeInOut 1s ease-in-out 1;
  }
}

.button__label {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs, $spacing-xs);
  flex-grow: 1;
}

.button--primary {
  background-color: var(--button-background-color-primary, button-background-color('primary'));
  color: var(--button-text-color-primary, button-text-color('primary'));

  &:disabled {
    background-color: var(--background-color-tertiary, background-color('tertiary'));
    color: var(--text-color-tertiary);
  }
}

.button--secondary {
  background-color: var(--button-background-color-secondary, button-background-color('secondary'));
  color: var(--button-text-color-secondary, button-text-color('secondary'));
  border: 1px solid var(--button-border-color-secondary, map-get($palette, 'button-border', 'secondary'));
  transition: all 0.3s;

  @media (hover: hover) {
    &:hover {
      background-color: var(--button-background-color-secondary-hover, button-background-color('secondary-hover'));
    }
  }

  &:focus-visible {
    outline: none;
    border: 1px solid #9671b0;
  }

  &:disabled {
    background-color: var(--background-color-tertiary, background-color('tertiary'));
    color: var(--text-color-tertiary);
  }
}

.button--icon {
  background-color: transparent;
  color: var(--icon-color-tertiary, text-color('tertiary'));
  padding: var(--spacing-s, $spacing-s);
  width: fit-content;
  height: fit-content;
  justify-content: center;
  align-items: center;
  font-family: var(--font-primary, font('primary'));
  border-radius: 50%;

  &:disabled {
    opacity: 0.6;
    background-color: var(--background-color-tertiary, background-color('tertiary'));
  }

  &:hover {
    background-color: var(--background-color-tertiary, background-color('tertiary'));
  }
}

// slot elements should be aligned center
::slotted(*) {
  display: inline-flex;
  align-items: center;
}

::slotted([slot='adorment-end']),
::slotted([slot='adorment-start']) {
  flex-grow: 0;
}

@keyframes fadeInOut {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
