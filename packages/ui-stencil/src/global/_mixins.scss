/* ===WEB FONTS MANAGEMENT=== */
/**
 * Applies the font smoothing
 * Used for better cross browser support
 * Ref: https://maximilianhoffmann.com/posts/better-font-rendering-on-osx
 */
@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

/**
  * Use to set the theme skin based on user preferences
  * @include spread-map($map);
 */
@mixin spread-map($map: ()) {
  @each $key, $value in $map {
    #{$key}: $value;
  }
}

/**
 * Use to hide elements visually but still make them accessible to screen readers
 * @include screen-reader-only();
 */
@mixin screen-reader-only {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  position: absolute;
  white-space: nowrap;
  overflow: hidden;
  width: 1px;
}

/**
* Use to apply the card style to whatever element
*/
@mixin card($variant: 'primary', $status: 'info') {
  background: var(--background-color-fourth, background-color('fourth'));
  margin: $spacingM 0;
  color: var(--text-color-primary, text-color('primary'));

  @if $variant == 'secondary' {
    padding: $spacingSM;
    border-radius: rem-value(8);

    @if $status == 'info' {
      color: var(--text-color-primary, text-color('primary'));
      border: 1px solid var(--border-color-primary, background-color('primary'));    
    }

    @if $status == 'inactive' {
      color: var(--text-color-inactive, text-color('inactive'));
      border: transparent;
      background: var(--background-color-secondary, background-color('secondary'));
    }

    @if $status == 'active' {
      color: var(--text-color-primary, text-color('primary'));
      box-shadow: $shadow4;
    }

    @if $status == 'accent' {
      background: var(--background-color-tertiary, background-color('tertiary'));
      border: 1px solid var(--border-color-accent, border-color('accent'));
    }

  } @else {
    border: 1px solid var(--border-color-secondary, border-color('secondary'));
    padding: $spacingS $spacingM;
    border-radius: rem-value(8);
  }

  @if $variant == 'tertiary' {
    background: var(--background-color-secondary, background-color('secondary'));
    padding: $spacingS;
    border: 1px solid var(--border-color-secondary, border-color('secondary'));
    border-radius: rem-value(8);
    margin: 0;
  }
}

@mixin flex-cols($cols: 1, $breakpoint: undefined, $gap: $spacingS) {
  @if $breakpoint != undefined {
    @media (--#{$breakpoint}-min) {
      flex: 0 0 calc(((100% - calc(#{$gap} * #{calc(12/$cols - 1)}))  / 12 * $cols));
      max-width: calc(((100% - calc(#{$gap} * #{calc(12/$cols - 1)}))  / 12 * $cols));
    }
  } @else {
    flex: 0 0 calc(((100% - calc(#{$gap} * #{calc(12/$cols - 1)}))  / 12 * $cols));
    max-width: calc(((100% - calc(#{$gap} * #{calc(12/$cols - 1)}))  / 12 * $cols));
  }
}


